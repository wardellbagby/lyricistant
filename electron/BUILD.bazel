load("@build_bazel_rules_nodejs//:index.bzl", "npm_package_bin")
load("@npm//electron:index.bzl", "electron")

package(default_visibility = ["//visibility:private"])

filegroup(
    name = "dist-resources",
    srcs = glob(["distResources/**/*"]),
)

electron(
    name = "start",
    args = [
        "./electron/main.js",
    ],
    data = [
        ":bundled_main",
        ":bundled_preload",
        ":bundled_renderer",
        ":dist-resources",
        "//:package.json",
    ],
)

npm_package_bin(
    name = "app",
    args = [
        "--config",
        "$(execpath electron-builder.json)",
        "--publish",
        "never",
        "-c.mac.identity=null",
    ],
    configuration_env_vars = ["PATH"],
    data = [
        ":bundled_main",
        ":bundled_preload",
        ":bundled_renderer",
        ":dist-resources",
        ":electron-builder.json",
        ":notarize-mac-app.js",
        "//:package.json",
        "@npm//electron",
        "@npm//electron-builder",
    ],
    output_dir = True,
    tags = [
        "no-cache",
        "no-sandbox",
    ],
    tool = "@npm//electron-builder/bin:electron-builder",
    visibility = ["//visibility:public"],
)

npm_package_bin(
    name = "bundled_main",
    outs = ["main.js"],
    args = [
        "--entry",
        "./$(GENDIR)/electron/main/index.js",
        "--target",
        "electron-main",
        "--mode",
        "production",
        "--output",
        "$@",
        "--display-error-details",
        "--config",
        "$(execpath :webpack.config.js)",
    ],
    data = [
        ":webpack.config.js",
        "//electron/main",
        "@npm//webpack",
        "@npm//webpack-cli",
    ],
    tool = "@npm//webpack/bin:webpack",
)

npm_package_bin(
    name = "bundled_preload",
    outs = ["preload.js"],
    args = [
        "--entry",
        "./$(GENDIR)/electron/main/preload.js",
        "--target",
        "electron-preload",
        "--mode",
        "production",
        "--output",
        "$@",
        "--display-error-details",
        "--config",
        "$(execpath :webpack.config.js)",
    ],
    data = [
        ":webpack.config.js",
        "//electron/main",
        "@npm//webpack",
        "@npm//webpack-cli",
    ],
    tool = "@npm//webpack/bin:webpack",
)

npm_package_bin(
    name = "bundled_renderer",
    outs = [
        "app_icon.png",
        "favicon.png",
        "index.html",
        "renderer.js",
        "roboto-latin-300.woff2",
        "roboto-latin-300italic.woff2",
        "roboto-latin-400.woff2",
        "roboto-latin-400italic.woff2",
        "roboto-latin-500.woff2",
        "roboto-latin-500italic.woff2",
        "roboto-latin-700.woff2",
        "roboto-latin-700italic.woff2",
        "roboto-mono-latin-300.woff2",
        "roboto-mono-latin-300italic.woff2",
        "roboto-mono-latin-400.woff2",
        "roboto-mono-latin-400italic.woff2",
        "roboto-mono-latin-500.woff2",
        "roboto-mono-latin-500italic.woff2",
        "roboto-mono-latin-700.woff2",
        "roboto-mono-latin-700italic.woff2",
        "social_banner.png",
    ],
    args = [
        "--entry",
        "./$(GENDIR)/renderer/main/index.js",
        "--entry",
        "./$(GENDIR)/renderer/main/analytics/index.js",
        "--target",
        "electron-renderer",
        "--config",
        "$(GENDIR)/renderer/main/webpack.config.js",
        "--mode",
        "production",
        "--output-path",
        "$(@D)",
        "--display-error-details",
        "--env.htmlTemplate=$(execpath //renderer/main:index.ejs)",
    ],
    data = [
        "//renderer/main",
        "//renderer/main:index.ejs",
        "//renderer/main:static_resources",
        "//renderer/main:webpack_config",
        "@npm//@pmmmwh/react-refresh-webpack-plugin",
        "@npm//circular-dependency-plugin",
        "@npm//clean-webpack-plugin",
        "@npm//copy-webpack-plugin",
        "@npm//css-loader",
        "@npm//file-loader",
        "@npm//html-webpack-plugin",
        "@npm//style-loader",
        "@npm//webpack",
        "@npm//webpack-cli",
    ],
    tool = "@npm//webpack/bin:webpack",
)
