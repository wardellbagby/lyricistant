name: Production Releases
on:
  push:
    tags:
      - 'v*'
jobs:
  assert-no-issues:
    name: 'Assert no issues'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the current branch.
        uses: actions/checkout@f1d3225b5376a0791fdee5a0e8eac5289355e43a # pin@v2
      - name: Setup Node.js - 15.x.x
        uses: actions/setup-node@7984c00a6eb7ec35a15dd83fd6d4f88c67421da3 # pin@v1
        with:
          node-version: '>=15.10'
      - name: Setup virtual display
        run: Xvfb :99 &
      - name: Install Gulp
        run: npm install -g gulp@4.0.2
      - name: Install dependencies
        run: npm ci
      - name: Run all tests
        run: gulp testAll --max-old-space-size=8192
        env:
          DISPLAY: ':99'
      - name: Check for Lint issues.
        run: npm run lint
  deploy-web:
    name: 'Deploy Web'
    runs-on: ubuntu-20.04
    needs: assert-no-issues
    steps:
      - name: Checkout the current branch.
        uses: actions/checkout@f1d3225b5376a0791fdee5a0e8eac5289355e43a # pin@v2
      - name: Setup Node.js - 15.x.x
        uses: actions/setup-node@7984c00a6eb7ec35a15dd83fd6d4f88c67421da3 # pin@v1
        with:
          node-version: '>=15.10'
      - name: Install Gulp
        run: npm install -g gulp@4.0.2
      - name: Install dependencies
        run: npm install
      - name: Build Web.
        run: 'gulp buildWeb'
      - name: Deploy Web
        uses: peaceiris/actions-gh-pages@de5cfc7ec76b2c3cf19e3e55d1ad085fe1192c9a # pin@v3
        with:
          personal_token: ${{ secrets.LYRICISTANT_TOKEN }}
          external_repository: wardellbagby/lyricistant-website
          publish_branch: gh-pages
          publish_dir: 'apps/web/dist/production/'
          force_orphan: true
          cname: lyricistant.app
  deploy-app:
    needs: assert-no-issues
    name: 'Deploy App'
    runs-on: macos-10.15
    steps:
      - name: Checkout the current branch.
        uses: actions/checkout@f1d3225b5376a0791fdee5a0e8eac5289355e43a # pin@v2
      - name: Setup Node.js - 15.x.x
        uses: actions/setup-node@7984c00a6eb7ec35a15dd83fd6d4f88c67421da3 # pin@v1
        with:
          node-version: '>=15.10'
      - name: Install Gulp
        run: npm install -g gulp@4.0.2
      - name: Build artifacts for all supported OSes.
        uses: nick-invision/retry@7c68161adf97a48beb850a595b8784ec57a98cbb # pin@v2
        env:
          CSC_LINK: ${{ secrets.MACOS_CERT }}
          CSC_KEY_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: |
            gulp buildAllElectronApps
      - name: 'Deploy App'
        uses: marvinpinto/action-automatic-releases@4e86dbcfb19c3e408a4984b2b7d9a6de082f3c3f # pin@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: apps/electron/dist/production/app/*.*
